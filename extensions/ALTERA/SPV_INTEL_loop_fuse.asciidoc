SPV_INTEL_loop_fuse
===================

== Name Strings

SPV_INTEL_loop_fuse

== Contact

To report problems with this extension, please open a new issue at:

https://github.com/KhronosGroup/SPIRV-Registry

== Contributors

- Jessica Davies, Intel

== Notice

Copyright (c) 2020 Intel Corporation.  All rights reserved.

== Status

Final draft

== Version

[width="40%",cols="25,25"]
|========================================
| Last Modified Date | 2020-11-24
| Revision           | 1
|========================================

== Dependencies

This extension is written against the SPIR-V Specification,
Version 1.5 Revision 3.

This extension requires SPIR-V 1.0.

== Overview

This extension adds a function decoration to request that loops meeting defined conditions be fused with each other.

== Extension Name

To use this extension within a SPIR-V module, the following *OpExtension* must be present in the module:

----
OpExtension "SPV_INTEL_loop_fuse"
----

== New capabilities
This extension introduces a new capability:

----
LoopFuseINTEL
----

== New Decorations

This extension adds the following decoration under the *LoopFuseINTEL* capability:

----
FuseLoopsInFunctionINTEL
----

== Token Number Assignments

--
[width="40%"]
[cols="70%,30%"]
[grid="rows"]
|====
|LoopFuseINTEL                |5906
|FuseLoopsInFunctionINTEL     |5907
|====
--

== Modifications to the SPIR-V Specification, Version 1.5

=== Decoration

Modify Section 3.20, Decoration, adding the following row to the Decoration table:

--
[options="header"]
|====
2+^| Decoration 2+^| Extra Operands ^| Enabling Capabilities
| 5907 | *FuseLoopsInFunctionINTEL* +
Only valid on OpFunction. Request, to the extent possible, that loops in the function be fused if they are contained in strictly fewer than _Depth_ other loops in the function. _Depth_ is a 32-bit unsigned integer type scalar. _Independent_ is a 32-bit unsigned integer type scalar.  If _Independent_ is non-zero, it guarantees that fusing loops in the function that are contained in strictly fewer than _Depth_ other loops within the function does not change the order of any dependent memory accesses.
| Literal +
_Depth_ | Literal +
_Independent_ | *LoopFuseINTEL*
|====
--

=== Capability

Modify Section 3.31, Capability, adding a row to the Capability table:
--
[options="header"]
|====
2+^| Capability ^| Implicitly Declares
| 5906 | LoopFuseINTEL |
|====
--

=== Validation Rules

None.

== Issues

None.

== Revision History

[cols="5,15,15,70"]
[grid="rows"]
[options="header"]
|========================================
|Rev|Date|Author|Changes
|1|2020-11-24|Jessica Davies|*Initial public release*
|========================================
