= SPV_INTEL_fpga_argument_interfaces

:source-highlighter: coderay
:coderay-linenums-mode: table

// This section needs to be after the document title.
:doctype: book
:toc2:
:toc: left
:encoding: utf-8
:lang: en

:blank: pass:[ +]

// Set the default source code type in this document to C++,
// for syntax highlighting purposes.  This is needed because
// docbook uses c++ and html5 uses cpp.
:language: {basebackend@docbook:c++:cpp}

// This is necessary for asciidoc, but not for asciidoctor
:cpp: C++

== Name Strings

SPV_INTEL_fpga_argument_interfaces

== Contact

To report problems with this extension, please open a new issue at:

https://github.com/KhronosGroup/SPIRV-Headers

== Contributors

Abhishek Tiwari, Intel +
Joe Garvey, Intel

== Notice

Copyright (c) 2022 Intel Corporation.  All rights reserved.

== Status

Final draft

== Version

|========================================
| Last Modified Date | 2022-12-04
| Revision           | 1
|========================================

== Dependencies

This extension is written against the SPIR-V Specification,
Version 1.6 Revision 2.

This extension requires SPIR-V 1.0.

== Overview

This extension adds kernel argument decorations that influence the interfaces built for for Field Programmable Gate Array (FPGA) kernel arguments.

== Extension Name
To use this extension within a SPIR-V module, the following *OpExtension* must be present in the module:

----
OpExtension "SPV_INTEL_fpga_argument_interfaces"
----

== New Capabilities
This extension introduces the following new capability:

----
FPGAArgumentInterfacesINTEL
----

== Token Number Assignments

--
[width="40%"]
[cols="70%,30%"]
[grid="rows"]
|====
|FPGAArgumentInterfacesINTEL        |6174
|ConduitKernelArgumentINTEL         |6175
|RegisterMapKernelArgumentINTEL     |6176
|MMHostInterfaceAddressWidthINTEL   |6177
|MMHostInterfaceDataWidthINTEL      |6178
|MMHostInterfaceLatencyINTEL        |6179
|MMHostInterfaceReadWriteModeINTEL  |6180
|MMHostInterfaceMaxBurstINTEL       |6181
|MMHostInterfaceWaitRequestINTEL    |6182
|StableKernelArgumentINTEL          |6183
|====
--

== Modifications to the SPIR-V Specification, Version 1.6

=== Decoration

Modify Section 3.20, Decoration, adding these rows to the Decoration table:

--
[options="header"]
|====
2+^| Decoration 2+^| Extra Operands	^| Enabling Capabilities
// --- ROW BREAK ---
| 6175 | *ConduitKernelArgumentINTEL* +
Must be applied only to an *OpFunctionParameter* of a function that is an *entry point*. Indicates that dedicated input wires should be created for this argument.
2+| | *FPGAArgumentInterfacesINTEL*
| 6176 | *RegisterMapKernelArgumentINTEL* +
Must be applied only to an *OpFunctionParameter* of a function that is an *entry point*. Indicates that this argument is stored in registers in the kernel that are accessed through a common interface shared between this argument, other RegisterMapKernelArgumentINTEL arguments, and possibly kernel control signals.
2+| | *FPGAArgumentInterfacesINTEL*
// --- ROW BREAK ---
| 6177 | *MMHostInterfaceAddressWidthINTEL* +
Must be applied only to a pointer *OpFunctionParameter* of a function that is an *entry point*. Indicates the size, in bits, of the address bus for the Memory Mapped Interface created for this pointer argument.
2+| Literal Number (32-bit signed integer) +
_AddressWidth_ | *FPGAArgumentInterfacesINTEL*
// --- ROW BREAK ---
| 6178 | *MMHostInterfaceDataWidthINTEL* +
Must be applied only to a pointer *OpFunctionParameter* of a function that is an *entry point*. Indicates the size, in bits, of the data bus for the Memory Mapped Interface created for this pointer argument.
2+| Literal Number (32-bit signed integer) +
_DataWidth_ | *FPGAArgumentInterfacesINTEL*
// --- ROW BREAK ---
| 6179 | *MMHostInterfaceLatencyINTEL* +
Must be applied only to a pointer *OpFunctionParameter* of a function that is an *entry point*. Indicates the latency in cycles of the Memory Mapped Interface created for this pointer argument. If this decoration is present it guarantees that the latency is fixed.
2+| Literal Number (32-bit signed integer) +
_Latency_ | *FPGAArgumentInterfacesINTEL*
// --- ROW BREAK ---
| 6180 | *MMHostInterfaceReadWriteModeINTEL* +
Must be applied only to a pointer *OpFunctionParameter* of a function that is an *entry point*. Indicates the read-write mode of the Memory Mapped Interface created for this pointer argument.
2+| *Access Qualifier* +
_ReadWriteMode_ | *FPGAArgumentInterfacesINTEL*
// --- ROW BREAK ---
| 6181 | *MMHostInterfaceMaxBurstINTEL* +
Must be applied only to a pointer *OpFunctionParameter* of a function that is an *entry point*. Indicates the maximum burst count of the Memory Mapped Interface created for this pointer argument.
2+| Literal Number (32-bit signed integer) +
_MaxBurstCount_ | *FPGAArgumentInterfacesINTEL*
// --- ROW BREAK ---
| 6182 | *MMHostInterfaceWaitRequestINTEL* +
Must be applied only to a pointer *OpFunctionParameter* of a function that is an *entry point*. Indicates whether the Memory Mapped Interface created for this pointer argument should accept a waitrequest signal.

A setting of 1 means build a waitrequest signal and a setting of 0 means don't.

2+| Literal Number (32-bit signed integer) +
_Waitrequest_ | *FPGAArgumentInterfacesINTEL*
// --- ROW BREAK ---
| 6183 | *StableKernelArgumentINTEL* +
Must be applied only to an *OpFunctionParameter* of a function that is an *entry point*. Indicates that this input will not change during the execution of pipelined kernel invocations. Input can change once all active invocations have finished.
2+| | *FPGAArgumentInterfacesINTEL*
|====
--

=== Capability

Modify Section 3.31, Capability, adding a row to the Capability table:
--
[options="header"]
|====
2+^| Capability ^| Implicitly Declares
| 6174
| FPGAArgumentInterfacesINTEL
|
|====
--

=== Validation Rules

It is invalid to specify both *ConduitKernelArgumentINTEL* and *RegisterMapKernelArgumentINTEL* decorations on the same *OpFunctionParameter*.

== Issues

None.

== Revision History

[cols="5,15,15,70"]
[grid="rows"]
[options="header"]
|========================================
|Rev|Date|Author|Changes
|1|2022-12-04|Abhishek Tiwari, Brox Chen|*Initial public release*
|========================================
